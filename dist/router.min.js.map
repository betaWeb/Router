{
  "version": 3,
  "sources": ["../src/Route.ts", "../src/Router.ts"],
  "sourcesContent": ["export default class Route {\n\n    public path: string = null\n\n    public params?: string[] = []\n\n    public callback: Function = null\n\n    public name: string = null\n\n    private readonly regex_path: RegExp = null\n\n    constructor(path: string, callback: Function, name: string = null) {\n        this.path = path\n        this.params = path.match(/(:\\w+)/gi) || []\n        this.callback = callback\n        this.name = name\n        this.regex_path = new RegExp(\"^\" + path.replace(/:[^\\s/]+/g, '([\\\\w-]+)') + \"$\")\n    }\n\n    public match(path: string): RouteMatch|null {\n        const match = path.match(this.regex_path)\n\n        if (match === null) {\n            return null\n        }\n\n        match.shift()\n\n        return {\n            path: this.path,\n            callback: this.callback,\n            name: this.name,\n            params: match.reduce((acc, value, index) => {\n                if (this.params[index]) {\n                    const key = this.params[index].replace(':', '')\n\n                    acc[key] = value\n                }\n\n                return acc\n            }, {})\n        }\n    }\n\n}", "import Route from \"~Route\";\n\nexport default class Router {\n\n    public mode: string = 'history'\n\n    public root: string = '/'\n\n    private routes: RoutesCollection = []\n\n    private current: string = null\n\n    private interval: number = null\n\n    private previous: string[] = []\n\n    private previous_index: number = -1\n\n    constructor(options: RouterOptions = {}) {\n        this.mode = window.history.pushState ? 'history' : 'hash'\n\n        if (options.mode) {\n            this.mode = options.mode\n        }\n\n        if (options.root) {\n            this.root = options.root\n        }\n\n        this.watchUrl = this.watchUrl.bind(this)\n\n        this.listen()\n    }\n\n    add(path: string, cb: Function, name?: string): Router {\n        this.routes.push(\n            // @ts-ignore\n            new Route(path, cb, name)\n        )\n\n        return this\n    }\n\n    remove(path: string): Router {\n        this.routes = this.routes.filter(route => route.path !== path)\n\n        return this\n    }\n\n    back() {\n        if (this.mode === 'history') {\n            window.history.back()\n        }\n    }\n\n    forward() {\n        if (this.mode === 'history') {\n            window.history.forward()\n        }\n    }\n\n    flush(): Router {\n        this.routes = []\n\n        return this\n    }\n\n    navigate(options: NavigationOptions = {}): Router {\n        let path: string\n\n        if (options.name) {\n            const params = options.params || {};\n\n            const route = this.routes.find(route => route.name === options.name)\n\n            if (route) {\n                path = route.path\n\n                for (let key in params) {\n                    if (params.hasOwnProperty(key)) {\n                        path = path.replace(':' + key, params[key])\n                    }\n                }\n            }\n        } else {\n            path = options.path\n        }\n\n        if (!path) {\n            return\n        }\n\n        if (this.mode === 'history') {\n            window.history.pushState(null, null, this.root + this.clearSlashes(path))\n        } else {\n            const href = `${window.location.href.replace(/#(.*)$/, '')}#${path}`\n\n            this.previous.unshift(href)\n\n            window.location.href = href\n        }\n\n        return this\n    }\n\n    clearSlashes(path: string) {\n        return path\n            .toString()\n            .replace(/\\/$/, '')\n            .replace(/^\\//, '')\n    }\n\n    getFragment(): string {\n        let fragment: string\n\n        if (this.mode === 'history') {\n            fragment = this.clearSlashes(decodeURI(window.location.pathname + window.location.search))\n            fragment = fragment.replace(/\\?(.*)$/, '')\n            fragment = this.root !== '/' ? fragment.replace(this.root, '') : fragment\n        } else {\n            const match = window.location.href.match(/#(.*)$/)\n\n            fragment = match ? match[1] : ''\n        }\n        return this.clearSlashes(fragment)\n    }\n\n    listen(): void {\n        clearInterval(this.interval)\n\n        this.interval = setInterval(this.watchUrl, 50)\n    }\n\n    watchUrl(): void {\n        if (this.current === this.getFragment()) {\n            return\n        }\n\n        this.current = this.getFragment()\n\n        const route = this.routes.find(route => route.match(this.current) !== null) || null\n\n        if (route !== null) {\n            route.callback.call(this, route.params)\n        } else {\n            this.current = null\n        }\n    }\n}\n\nif (window && document) {\n    window['Router'] = Router\n}\n"],
  "mappings": "MAAA,IAAA,QAYI,kBAA6D,MAVtD,UAAe,KAEf,YAAoB,GAEpB,cAAqB,KAErB,UAAe,KAEL,gBAAqB,KAGlC,KAAK,KAAO,EACZ,KAAK,OAAS,EAAK,MAAM,aAAe,GACxC,KAAK,SAAW,EAChB,KAAK,KAAO,EACZ,KAAK,WAAa,GAAI,QAAO,IAAM,EAAK,QAAQ,YAAa,aAAe,KAGzE,SACH,MAAc,EAAK,MAAM,KAAK,YAE9B,MAAI,KAAU,KACH,KAGX,GAAM,QAEC,CACH,KAAM,KAAK,KACX,SAAU,KAAK,SACf,KAAM,KAAK,KACX,OAAQ,EAAM,OAAO,UACjB,GAAI,KAAK,OAAO,IACZ,MAAY,KAAK,OAAO,GAAO,QAAQ,IAAK,IAE5C,EAAI,GAAO,EAGf,MAAO,IACR,UAzCf,ECAA,QAkBI,cAAqC,IAd9B,UAAe,UAEf,UAAe,IAEd,YAA2B,GAE3B,aAAkB,KAElB,cAAmB,KAEnB,cAAqB,GAErB,oBAAyB,GAG7B,KAAK,KAAO,OAAO,QAAQ,UAAY,UAAY,OAEnD,AAAI,EAAQ,MACR,MAAK,KAAO,EAAQ,MAGxB,AAAI,EAAQ,MACR,MAAK,KAAO,EAAQ,MAGxB,KAAK,SAAW,KAAK,SAAS,KAAK,MAEnC,KAAK,SAGT,WACI,YAAK,OAAO,KAER,GAAI,GAAM,EAAM,EAAI,IAGjB,KAGX,UACI,YAAK,OAAS,KAAK,OAAO,OAAO,GAAS,EAAM,OAAS,GAElD,KAGX,OACI,AAAI,KAAK,OAAS,WACd,OAAO,QAAQ,OAIvB,UACI,AAAI,KAAK,OAAS,WACd,OAAO,QAAQ,UAIvB,QACI,YAAK,OAAS,GAEP,KAGX,WAAsC,IAClC,MAEA,GAAI,EAAQ,MACR,MAAe,EAAQ,QAAU,KAEnB,KAAK,OAAO,KAAK,GAAS,EAAM,OAAS,EAAQ,MAE/D,GAAI,GACA,EAAO,EAAM,KAEb,YAAgB,GACZ,AAAI,EAAO,eAAe,IACtB,GAAO,EAAK,QAAQ,IAAM,EAAK,EAAO,UAKlD,GAAO,EAAQ,KAGnB,GAAI,CAAC,EACD,OAGJ,GAAI,KAAK,OAAS,UACd,OAAO,QAAQ,UAAU,KAAM,KAAM,KAAK,KAAO,KAAK,aAAa,SAEnE,MAAa,GAAG,OAAO,SAAS,KAAK,QAAQ,SAAU,OAAO,IAE9D,KAAK,SAAS,QAAQ,GAEtB,OAAO,SAAS,KAAO,EAG3B,MAAO,MAGX,gBACI,MAAO,GACF,WACA,QAAQ,MAAO,IACf,QAAQ,MAAO,IAGxB,cACI,MAEA,GAAI,KAAK,OAAS,UACd,EAAW,KAAK,aAAa,UAAU,OAAO,SAAS,SAAW,OAAO,SAAS,SAClF,EAAW,EAAS,QAAQ,UAAW,IACvC,EAAW,KAAK,OAAS,IAAM,EAAS,QAAQ,KAAK,KAAM,IAAM,OAEjE,MAAc,OAAO,SAAS,KAAK,MAAM,UAEzC,EAAW,EAAQ,EAAM,GAAK,GAElC,MAAO,MAAK,aAAa,GAG7B,SACI,cAAc,KAAK,UAEnB,KAAK,SAAW,YAAY,KAAK,SAAU,IAG/C,WACI,GAAI,KAAK,UAAY,KAAK,cACtB,OAGJ,KAAK,QAAU,KAAK,cAEpB,MAAc,KAAK,OAAO,KAAK,GAAS,EAAM,MAAM,KAAK,WAAa,OAAS,KAE/E,AAAI,IAAU,KACV,EAAM,SAAS,KAAK,KAAM,EAAM,QAEhC,KAAK,QAAU,SAjJ3B,EAsJA,AAAI,QAAU,UACV,QAAO,OAAY",
  "names": []
}
